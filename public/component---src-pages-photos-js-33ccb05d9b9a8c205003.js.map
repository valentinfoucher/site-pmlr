{"version":3,"sources":["webpack:///./src/pages/photos.js"],"names":["PhotosPage","props","state","activePopup","selectedItem","render","data","this","title","keywords","className","id","contentfulPhotos","photos","map","item","index","key","onClick","setState","fixed","fluid","objectFit","objectPosition","src","file","url","alt","Component","pageQuery"],"mappings":"gQAOqBA,E,oBACnB,WAAYC,GAAQ,IAAD,SACjB,cAAMA,IAAN,MACKC,MAAQ,CACXC,aAAa,EACbC,aAAc,GAJC,E,0GAQnBC,OAAA,WAAU,IAAD,OACCC,EAASC,KAAKN,MAAdK,KADD,EAE+BC,KAAKL,MAAnCC,EAFD,EAECA,YAAaC,EAFd,EAEcA,aAErB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEI,MAAM,SACNC,SAAU,CAAC,cAAD,4CAEZ,yBAAKC,UAAU,4BAA4BC,GAAG,SAC5C,yBAAKD,UAAU,aACb,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,mBAAd,WAEF,wBAAIA,UAAU,oBACXJ,EAAKM,iBAAiBC,OAAOC,KAAI,SAACC,EAAMC,GACvC,OACE,wBAAIC,IAAKD,EAAON,UAAU,QACxB,yBACEA,UAAU,QACVQ,QAAS,WACP,EAAKC,SAAS,CACZhB,aAAa,EACbC,aAAcY,MAIlB,kBAAC,IAAD,CACEI,MAAOL,EAAKM,MACZC,UAAU,QACVC,eAAe,kBAO1BpB,EACC,yBAAKO,UAAU,YACb,0BACEA,UAAU,cACVQ,QAAS,WACP,EAAKC,SAAS,CACZhB,aAAa,OAKnB,yBAAKO,UAAU,eACb,uBACEA,UAAU,eACVQ,QAAS,WACP,EAAKC,SAAS,CACZhB,aAAa,OAInB,yBACEqB,IAAKlB,EAAKM,iBAAiBC,OAAOT,GAAcqB,KAAKC,IACrDC,IAAI,gBAKV,O,GA1E0BC,aAkF3BC,EAAS","file":"component---src-pages-photos-js-33ccb05d9b9a8c205003.js","sourcesContent":["import React, { Component } from \"react\";\nimport Img from \"gatsby-image\";\nimport { graphql } from \"gatsby\";\n\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\n\nexport default class PhotosPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activePopup: false,\n      selectedItem: 0\n    };\n  }\n\n  render() {\n    const { data } = this.props;\n    const { activePopup, selectedItem } = this.state;\n\n    return (\n      <Layout>\n        <SEO\n          title=\"Photos\"\n          keywords={[`Rohit Gupta`, `Frontend Developer`, `Developer`, `Photo`]}\n        />\n        <div className=\"site-container blogs-page\" id=\"Blogs\">\n          <div className=\"container\">\n            <div className=\"section-head\">\n              <h1 className=\"line-heading h2\">Photos</h1>\n            </div>\n            <ul className=\"photos-page-list\">\n              {data.contentfulPhotos.photos.map((item, index) => {\n                return (\n                  <li key={index} className=\"item\">\n                    <div\n                      className=\"inner\"\n                      onClick={() => {\n                        this.setState({\n                          activePopup: true,\n                          selectedItem: index\n                        });\n                      }}\n                    >\n                      <Img\n                        fixed={item.fluid}\n                        objectFit=\"cover\"\n                        objectPosition=\"50% 50%\"\n                      />\n                    </div>\n                  </li>\n                );\n              })}\n            </ul>\n            {activePopup ? (\n              <div className=\"rg-popup\">\n                <span\n                  className=\"popup-layer\"\n                  onClick={() => {\n                    this.setState({\n                      activePopup: false\n                    });\n                  }}\n                ></span>\n\n                <div className=\"popup-inner\">\n                  <i\n                    className=\"fas fa-times\"\n                    onClick={() => {\n                      this.setState({\n                        activePopup: false\n                      });\n                    }}\n                  ></i>\n                  <img\n                    src={data.contentfulPhotos.photos[selectedItem].file.url}\n                    alt=\"popup-img\"\n                  />\n                </div>\n              </div>\n            ) : (\n              \"\"\n            )}\n          </div>\n        </div>\n      </Layout>\n    );\n  }\n}\nexport const pageQuery = graphql`\n  query PhotosPageQuery {\n    contentfulPhotos {\n      photos {\n        file {\n          url\n        }\n        fluid(maxWidth: 600) {\n          base64\n          aspectRatio\n          src\n          srcSet\n          srcWebp\n          srcSetWebp\n          sizes\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}